MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**********************************************************************
                      00002 ;                                                                     *
                      00003 ;    Filename:      Lab5_TurnIn.asm                                   *
                      00004 ;    Date:          2/13/11                                           *
                      00005 ;    File Version:  9999                                              *
                      00006 ;                                                                     *
                      00007 ;    Author:        Robert Hildebrandt                                *
                      00008 ;    Company:       Student                                           *
                      00009 ;                                                                     *
                      00010 ;                                                                     *
                      00011 ;**********************************************************************
                      00012 ;                                                                     *
                      00013 ;    Files required: P16F877.INC                                      *
                      00014 ;                                                                     *
                      00015 ;                                                                     *
                      00016 ;                                                                     *
                      00017 ;**********************************************************************
                      00018 ;                                                                     *
                      00019 ;    Notes: This program has the ability to recognize and handle      *
                      00020 ;           three interrupt sources. The end functinality implemented *
                      00021 ;           on the PICkit2 dev board was the change in rotation speed *
                      00022 ;           via the potentiometer & change in the direction of        *
                      00023 ;           rotation of the 8 LEDs attached to the board              *
                      00024 ;**********************************************************************
                      00025 
                      00026 #include <p16F887.inc>
                      00001         LIST
                      00002 ; P16F887.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00617         LIST
2007   20C4           00027         __CONFIG    _CONFIG1, _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OFF & _MCLRE
                            _OFF & _PWRTE_ON & _WDT_OFF & _INTRC_OSC_NOCLKOUT
2008   3EFF           00028         __CONFIG    _CONFIG2, _WRT_OFF & _BOR21V
                      00029 
                      00030     cblock     0x20
                      00031 ;--SYMBOL-----|--ADDRESS--|--COMMENT--
  00000020            00032 Display_Save  ;  0x020
  00000021            00033 Dice_Display  ;  0x021
  00000022            00034 Dice              ;  0x022
  00000023            00035 DiceLow           ;  0x023
  00000024            00036 DiceHi            ;  0x024
  00000025            00037 Dice_Final        ;  0x025
  00000026            00038 Display       ;  0x026      Define a variable to hold the diplay
  00000027            00039 State             ;  0x027
  00000028            00040 Toggle            ;  0x028
  00000029            00041 LCD_E             ;      0x029          LCD enable aka "clk" aka latch, we must toggle this pin to show 
                            new data
  0000002A            00042 LCD_RS            ;      0x030      LCD Command/Data Select (0/1) 
  0000002B            00043 LCD_RW            ;  0x031              LCD read/write (0/1) we will be using read only...
  0000002C            00044 LCD_Data          ;      0x032          Full blown 8 bit data
  0000002D            00045 Delay1
  0000002E            00046 Delay2
  0000002F            00047 curLabelDone  ;  0x
  00000030            00048 avgLabelDone
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000031            00049 tempChar
  00000032            00050 A2D_Average              ; define a variable to hold the Analog to Digital average
  00000033            00051 A2D_Current              ; define variable for current A2D reading
  00000034            00052 Current_Char1
  00000035            00053 Current_Char2
  00000036            00054 Avg_Char1
  00000037            00055 Avg_Char2
  00000038            00056 Display_Current          ; define a variable to display current
  00000039            00057 Display_Average ; define a variable to display average
  0000003A            00058 Queue:64          ; 16 bytes to hold last 16 entries
  0000009E            00059 RunningSum:6     ; sum of last 8 entries
  000000A4            00060 Round:6          ; divide by 8 and round.
  000000AA            00061 temp
                      00062     endc
                      00063 
                      00064 ; Interrupt Context registers
                      00065     cblock 0x70     ; put these up in unbanked RAM
                      00066 ;--SYMBOL-----|--ADDRESS--|--COMMENT--
  00000070            00067 W_Save            ;  0x070              For saving working register
  00000071            00068 STATUS_Save   ;  0x071          For saving the status word
                      00069     endc
                      00070 
                      00071     org 0
0000   2???           00072     goto      init
                      00073 
                      00074 ; -- INTERUPT SERVICE ROUTINE --
                      00075      org 4
0004                  00076 ISR:   
                      00077     ; -- Pre-ISR 
0004   00F0           00078         movwf     W_Save              ; Save context
0005   0803           00079     movf      STATUS,w                     ; move STATUS file to working
0006   00F1           00080     movwf     STATUS_Save                  ; move working to STATUS_Save
                      00081 
                      00082         ; -- Recognize the Timer0 Interrupt flag
0007   190B           00083     btfsc     INTCON,T0IF                 ; if the Timer0 Interupt flag (T0IF) was set
0008   2???           00084     goto      ServiceTimer0               ; goto that routine.
                      00085        
0009   2???           00086         goto      ExitISR          
                      00087 
000A                  00088 ServiceTimer0:
000A   1283           00089     bcf       STATUS,RP0          ; Ensure ISR executes in Register Bank 0
000B   1303           00090     bcf       STATUS,RP1
                      00091     ;bcf       INTCON,T0IF         ; clear the interrupt flag. (must be done in software)
                      00092         ; ----------------------------------------
                      00093         ; When Timer0 over flows, get the ADC value
                      00094         ; and update cur-val and avg-val on the screen
                      00095         ; ----------------------------------------
000C   01B3           00096         clrf      A2D_Current
000D   149F           00097         bsf       ADCON0,GO_DONE      ; start conversion
000E   1C9F           00098     btfss     ADCON0,GO_DONE      ; this bit will change to zero when the conversion is complete
000F   2???           00099     goto      $-1
                      00100          
0010   081E           00101         movf      ADRESH,w                      ; read the A2D
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011   00B3           00102         movwf     A2D_Current       ; save the current value
                      00103         ;call     Filter                        ; send it to filter
0012   00B2           00104         movwf     A2D_Average           ; save the filtered value
0013   2???           00105         call      LCD_WavgVal
0014   0833           00106         movfw     A2D_Current
0015   2???           00107         call      LCD_WcurVal
                      00108 
0016   2???           00109         goto      LoadNewTMR0
                      00110 
Warning[207]: Found label after column 1. (LoadNewTMR0)
0017                  00111         LoadNewTMR0:
0017   3000           00112                 movlw     0x00
0018   0081           00113                 movwf     TMR0
                      00114 
0019   110B           00115     bcf       INTCON,T0IF         ; clear the interrupt flag. (must be done in software)
                      00116 
001A   2???           00117         goto    ExitISR
                      00118 
                      00119 ; ----- Before returning to the next instruction after the interupt
                      00120 ; ----- we must restore what we were using. This section will always
                      00121 ; ----- be the same regardless of what interupt we were serving...               
001B                  00122 ExitISR:
001B   0871           00123     movf      STATUS_Save,w ; Restore context
001C   0083           00124     movwf     STATUS
001D   0EF0           00125     swapf     W_Save,f      ; swapf doesn't affect Status bits, but MOVF would
001E   0E70           00126     swapf     W_Save,w
001F   0009           00127     retfie                                      ; return from interupt and allow other to occur (interup
                            t enable)
                      00128  
0020                  00129 DelayW:
0020   00AD           00130          movwf     Delay1
0021   00AE           00131          movwf     Delay2
0022   2???           00132          call      Delay
0023   0008           00133          return
0024                  00134 Delay:
0024   0BAD           00135      decfsz    Delay1,f
0025   2???           00136      goto      Delay
0026   0BAE           00137      decfsz    Delay2,f
0027   2???           00138      goto      Delay
0028   0008           00139          return
                      00140    
0029                  00141 init:
                      00142         ;-----------------------------------------
                      00143         ;--------- Initializations ---------------
                      00144         ;--PORTS--
                      00145         ;  PORTD:   Output, connected to data pins
                      00146         ;                   on the HD44780 display
                      00147         ;  PORTE:   Output, connected to the control
                      00148         ;                   pins on the HD44780. E0 = LCD_E,
                      00149         ;                   E1 = LCD_R/W, E2 = LCD_RS, 
                      00150         ;                   E3 = NC
                      00151         ;  PORTA:   Input, RA1 connected to 
                      00152         ;                   microphone
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00153         ;  PORTB:   Input, RB0 connected to button
                      00154         ;--TIMERS--
                      00155         ;  TMR0:    1:255 prescaller, interrupt
                      00156         ;           enabled. Used to trigger events
                      00157         ;--Display
                      00158         ;  HD44780: Interface specifications 
                      00159         ;                       shall be met for correct
                      00160         ;                       operation
                      00161         ;--Variables
                      00162         ;       curLabelDone - 1 if the current label 
                      00163         ;                                  has been written
                      00164         ;       avgLabelDone - 1 if the average label
                      00165         ;                                  has been written
                      00166         ;-----------------------------------------
0029   1683           00167         bsf               STATUS,RP0
002A   1703           00168         bsf           STATUS,RP1
                      00169         ;clrf     ANSEL
                      00170         ;<PORTD>
                      00171         ;<PORTE>
002B   1683           00172         bsf               STATUS,RP0    ; bank 1
002C   1303           00173         bcf               STATUS,RP1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002D   0188           00174         clrf      TRISD                 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002E   0189           00175         clrf      TRISE
                      00176 
002F   1283           00177         bcf               STATUS,RP0    ; bank 0
0030   1303           00178         bcf               STATUS,RP1    ;
0031   0188           00179         clrf      PORTD                 ;
0032   0189           00180         clrf      PORTE 
                      00181         ;</PORTD>
                      00182         ;</PORTE>
                      00183         ;<PORTB>
0033   1683           00184     bsf         STATUS,RP0              ; select Register Bank 3        
0034   1703           00185         bsf     STATUS,RP1    
0035   3000           00186     movlw   0x00
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0036   0089           00187     movwf   ANSELH                      ; PortB pins are digitial (important as RB0 is switch)
0037   3000           00188         movlw   0x00                ; Left Justified, Vdd-Vss referenced
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0038   009F           00189         movwf   ADCON1
0039   1683           00190         bsf         STATUS,RP0
003A   1703           00191         bsf     STATUS,RP1
003B   30FF           00192         movlw   0xFF
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003C   0088           00193         movwf   ANSEL
003D   3000           00194         movlw   0x00
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003E   0089           00195         movwf   ANSELH              ; PortB pins are digitial (important as RB0 is switch)
003F   1283           00196         bcf     STATUS,RP0          ; back to Register Bank 0
0040   1303           00197         bcf     STATUS,RP1
                      00198         
0041   3085           00199         movlw     B'10000101'
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0042   009F           00200         movwf     ADCON0         ; configure A2D for Fosc/8, Channel 0 (RA1), and turn on the A2D module
                              
                      00201 
0043   1283           00202     bcf     STATUS,RP0          ; back to Register Bank 0
0044   1303           00203     bcf     STATUS,RP1
                      00204         ;</PORTB>
                      00205         ;<Interrupts>
0045   30A0           00206          movlw     b'10100000'
0046   008B           00207          movwf     INTCON
0047   1683           00208          bsf       STATUS,RP0
0048   1303           00209          bcf       STATUS,RP1
                      00210         ;</Interrupts>
                      00211         
                      00212         ;<LCD>
0049   2???           00213         call      LCD_init      
                      00214         ;</LCD>
                      00215 
                      00216 
                      00217 
004A   1683           00218          bsf       STATUS,RP0     ; select Register Bank 1
004B   1303           00219          bcf       STATUS,RP1
004C   3007           00220          movlw     b'00000111'    ; configure Timer0.  Sourced from the Processor clock;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004D   0081           00221      movwf     OPTION_REG     ; Maximum Prescaler
004E   30FF           00222      movlw     0xFF
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004F   0085           00223      movwf     TRISA          ; Make PortA all input
                      00224      ;movlw     0x01
                      00225      ;movwf     TRISB          ; Make RB0 pin input (switch)
                      00226 
0050   1283           00227          bcf       STATUS,RP0     ; select Register Bank 0
0051   1303           00228          bcf       STATUS,RP1
                      00229          ;call     FilterInit   ;follow tutorial 11
0052   149F           00230          bsf       ADCON0,GO
                      00231 
0053   2???           00232         goto    MainLoop
                      00233 
0054                  00234 MainLoop:
                      00235 
                      00236 ;$$$$$$-----$$$$$
                      00237 ; The sweetest MainLoop you've EVER seen in your life!!!!!!
                      00238 ; Here's a secret easter egg, if you have actually READ this code, you will see this.
                      00239 ; Leave the word WOOT4MSD in the comments if you've read this.  
                      00240 
                      00241         
0054   2???           00242         goto      MainLoop
                      00243 
0055                  00244 FilterInit:
0055   303A           00245      movlw     Queue
0056   0084           00246      movwf     FSR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0057   019E           00247      clrf      RunningSum
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0058   019F           00248      clrf      RunningSum+1
0059   01BA           00249      clrf      Queue
005A   01BB           00250      clrf      Queue+1
005B   01BC           00251      clrf      Queue+2
005C   01BD           00252      clrf      Queue+3
005D   01BE           00253      clrf      Queue+4
005E   01BF           00254      clrf      Queue+5
005F   01C0           00255      clrf      Queue+6
0060   01C1           00256      clrf      Queue+7
0061   01C2           00257          clrf      Queue+8
0062   01C3           00258      clrf      Queue+9
0063   01CA           00259      clrf      Queue+10
0064   01CB           00260      clrf      Queue+11
0065   01CC           00261      clrf      Queue+12
0066   01CD           00262      clrf      Queue+13
0067   01CE           00263      clrf      Queue+14
0068   01CF           00264          clrf      Queue+15
0069   01D0           00265          clrf      Queue+16
006A   01D1           00266      clrf      Queue+17
006B   01D2           00267      clrf      Queue+18
006C   01D3           00268      clrf      Queue+19
006D   01DA           00269      clrf      Queue+20
006E   01DB           00270      clrf      Queue+21
006F   01DC           00271      clrf      Queue+22
0070   01DD           00272          clrf      Queue+23
0071   01DE           00273      clrf      Queue+24
0072   01DF           00274      clrf      Queue+25
0073   01E0           00275      clrf      Queue+26
0074   01E1           00276      clrf      Queue+27
0075   01E2           00277      clrf      Queue+28
0076   01E3           00278      clrf      Queue+29
0077   01EA           00279          clrf      Queue+30
0078   01EB           00280          clrf      Queue+31
0079   01EC           00281      clrf      Queue+32
007A   01ED           00282      clrf      Queue+33
007B   01EE           00283      clrf      Queue+34
007C   01EF           00284      clrf      Queue+35
007D   01F0           00285      clrf      Queue+36
007E   01F1           00286      clrf      Queue+37
007F   01F2           00287          clrf      Queue+38
0080   01F3           00288      clrf      Queue+39
0081   01FA           00289      clrf      Queue+40
0082   01FB           00290      clrf      Queue+41
0083   01FC           00291      clrf      Queue+42
0084   01FD           00292      clrf      Queue+43
0085   01FE           00293      clrf      Queue+44
0086   01FF           00294          clrf      Queue+45
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0087   0180           00295          clrf      Queue+46
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0088   0181           00296      clrf      Queue+47
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0089   0182           00297      clrf      Queue+48
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008A   0183           00298      clrf      Queue+49
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008B   018A           00299      clrf      Queue+50
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008C   018B           00300      clrf      Queue+51
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008D   018C           00301      clrf      Queue+52
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008E   018D           00302          clrf      Queue+53
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008F   018E           00303      clrf      Queue+54
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0090   018F           00304      clrf      Queue+55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0091   0190           00305      clrf      Queue+56
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0092   0191           00306      clrf      Queue+57
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0093   0192           00307      clrf      Queue+58
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0094   0193           00308      clrf      Queue+59
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0095   019A           00309          clrf      Queue+60
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0096   019B           00310          clrf      Queue+61
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0097   019C           00311      clrf      Queue+62
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0098   019D           00312          clrf      Queue+63
                      00313 
0099   0008           00314      return
                      00315 
009A                  00316 Filter:
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009A   00AA           00317      movwf     temp           ; save 
                      00318      
009B   0800           00319      movf      INDF,w         ; subtract the current out of the sum
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009C   029E           00320      subwf     RunningSum,f
009D   1C03           00321      btfss     STATUS,C       ; was there a borrow?
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009E   039F           00322      decf      RunningSum+1,f ; yes, take it from the high order byte
                      00323      
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
009F   082A           00324      movf      temp,w
00A0   0080           00325      movwf     INDF           ; store in table
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A1   079E           00326      addwf     RunningSum,f   ; Add into the sum
00A2   1803           00327      btfsc     STATUS,C
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A3   0A9F           00328      incf      RunningSum+1,f
                      00329      
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A4   0A84           00330      incf      FSR,f
00A5   0804           00331      movf      FSR,w
00A6   3A9E           00332      xorlw     Queue+64        ; did it overflow?
00A7   303A           00333      movlw     Queue          ; preload Queue base address (Does not affect the flags)
00A8   1903           00334      btfsc     STATUS,Z
00A9   0084           00335      movwf     FSR            ; yes: reset the pointer
                      00336 ;MAStraightline  ; 53 instructions, 55 cycles including call and & return
00AA   1003           00337      bcf       STATUS,C       ; clear the carry
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AB   0C1F           00338      rrf       RunningSum+1,w
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AC   00A5           00339      movwf     Round+1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AD   0C1E           00340      rrf       RunningSum,w   ; divide by 2 and copy to a version we can corrupt
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AE   00A4           00341      movwf     Round
                      00342      
00AF   1003           00343      bcf       STATUS,C       ; clear the carry
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B0   0CA5           00344      rrf       Round+1,f
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B1   0CA4           00345      rrf       Round,f        ; divide by 4
                      00346 
00B2   1003           00347      bcf       STATUS,C       ; clear the carry
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B3   0CA5           00348      rrf       Round+1,f
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B4   0CA4           00349      rrf       Round,f        ; divide by 8
                      00350 
00B5   1003           00351          bcf       STATUS,C       ; clear the carry
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B6   0CA5           00352      rrf       Round+1,f
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B7   0CA4           00353      rrf       Round,f        ; divide by 16
                      00354      
00B8   1003           00355          bcf       STATUS,C       ; clear the carry
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B9   0CA5           00356      rrf       Round+1,f
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BA   0CA4           00357      rrf       Round,f        ; divide by 32
                      00358 
00BB   1003           00359          bcf       STATUS,C       ; clear the carry
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BC   0CA5           00360      rrf       Round+1,f
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BD   0CA4           00361      rrf       Round,f        ; divide by 64
                      00362 
00BE   1803           00363      btfsc     STATUS,C       ; use the carry bit to round
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BF   0AA4           00364      incf      Round,f          
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C0   0824           00365      movf      Round,w        ; load Wreg with the answer
00C1   0008           00366      return     
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00367 
00C2                  00368 LCD_init:
                      00369         ;---------------------------------------------------
                      00370         ;-- LCD setup   [Port D config to digital outputs]
                      00371         ;-- PortE relationship to LCD is:
                      00372         ;-- |   E3      |       E2      |       E1      |       E0      |
                      00373         ;-- |   NC      |LCD_RS |LCD_RW |LCD_E  |
                      00374         ;---------------------------------------------------
00C2   3019           00375         movlw     0x19                  ; Delay 18.5 ms (Datasheet)
00C3   2???           00376         call      DelayW                ;
                      00377 
                      00378         ;---------------------------------------------------
                      00379         ; Use 8 bit mode, 2 lines and the std 5*8 font size
                      00380         ;---------------------------------------------------
00C4   0189           00381         clrf      PORTE                 ; -\ Toggle LCD_E
00C5   3001           00382         movlw     B'00000001'   ; --
00C6   00A9           00383         movwf     LCD_E 
00C7   0089           00384         movwf     PORTE
00C8   3002           00385         movlw     0x02                  ; 
00C9   2???           00386         call      DelayW                ; -- delay 777 us
00CA   3038           00387         movlw     B'00111000'   ; -- 8 bit mode, 2 Lines, 5*8 font, 
00CB   00AC           00388         movwf     LCD_Data              ; -- Send to LCD
00CC   0088           00389         movwf     PORTD
00CD   3002           00390         movlw     0x02                  ; 
00CE   2???           00391         call      DelayW                ; -- delay 777 us
00CF   0189           00392         clrf      PORTE                 ; --
00D0   3002           00393         movlw     0x02                  ; 
00D1   2???           00394         call      DelayW                ; -- delay 777 us
00D2   0188           00395         clrf      PORTD                 ; -/
                      00396         
                      00397 
00D3   3009           00398         movlw     0x09                  ; Delay 6.1 ms
00D4   2???           00399         call      DelayW
                      00400 
                      00401         ;---------------------------------------------------
                      00402         ; Use 8 bit mode, 2 lines and the std 5*8 font size
                      00403         ;---------------------------------------------------
00D5   0189           00404         clrf      PORTE                 ; -\ Toggle LCD_E
00D6   3001           00405         movlw     B'00000001'   ; --
00D7   00A9           00406         movwf     LCD_E 
00D8   0089           00407         movwf     PORTE
00D9   3002           00408         movlw     0x02                  ; 
00DA   2???           00409         call      DelayW                ; -- delay 777 us
00DB   3038           00410         movlw     B'00111000'   ; -- 8 bit mode, 2 Lines, 5*8 font, 
00DC   00AC           00411         movwf     LCD_Data              ; -- Send to LCD
00DD   0088           00412         movwf     PORTD
00DE   3002           00413         movlw     0x02                  ; 
00DF   2???           00414         call      DelayW                ; -- delay 777 us
00E0   0189           00415         clrf      PORTE                 ; --
00E1   3002           00416         movlw     0x02                  ; 
00E2   2???           00417         call      DelayW                ; -- delay 777 us
00E3   0188           00418         clrf      PORTD                 ; -/
                      00419         
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00420 
00E4   3009           00421         movlw     0x09                  ; Delay 6.1 ms
00E5   2???           00422         call      DelayW
                      00423 
                      00424         ;---------------------------------------------------
                      00425         ; Use 8 bit mode, 2 lines and the std 5*8 font size
                      00426         ;---------------------------------------------------
00E6   0189           00427         clrf      PORTE                 ; -\ Toggle LCD_E
00E7   3001           00428         movlw     B'00000001'   ; --
00E8   00A9           00429         movwf     LCD_E 
00E9   0089           00430         movwf     PORTE
00EA   3002           00431         movlw     0x02                  ; 
00EB   2???           00432         call      DelayW                ; -- delay 777 us
00EC   3038           00433         movlw     B'00111000'   ; -- 8 bit mode, 2 Lines, 5*8 font, 
00ED   00AC           00434         movwf     LCD_Data              ; -- Send to LCD
00EE   0088           00435         movwf     PORTD
00EF   3002           00436         movlw     0x02                  ; 
00F0   2???           00437         call      DelayW                ; -- delay 777 us
00F1   0189           00438         clrf      PORTE                 ; --
00F2   3002           00439         movlw     0x02                  ; 
00F3   2???           00440         call      DelayW                ; -- delay 777 us
00F4   0188           00441         clrf      PORTD                 ; -/
                      00442         
00F5   3002           00443         movlw     0x02                  ; Delay 777 us
00F6   2???           00444         call      DelayW
                      00445 
                      00446         ;---------------------------------------------------
                      00447         ; Cursor to the home position
                      00448         ;---------------------------------------------------    
00F7   0189           00449         clrf      PORTE                 ; -\ Toggle LCD_E
00F8   3001           00450         movlw     B'00000001'   ; --
00F9   00A9           00451         movwf     LCD_E 
00FA   0089           00452         movwf     PORTE
00FB   3002           00453         movlw     0x02                  ; 
00FC   2???           00454         call      DelayW                ; -- delay 777 us
00FD   3002           00455         movlw     B'00000010'   ; -- Cursor home 
00FE   00AC           00456         movwf     LCD_Data              ; -- Send to LCD
00FF   0088           00457         movwf     PORTD
0100   2???           00458         call      DelayW                ; -- delay 777us
0101   0189           00459         clrf      PORTE                 ; --
0102   3002           00460         movlw     0x02                  ; 
0103   2???           00461         call      DelayW                ; -- delay 777 us
0104   0188           00462         clrf      PORTD                 ; -/
                      00463 
0105   3002           00464         movlw     0x02                  ; Delay 777 us
0106   2???           00465         call      DelayW
                      00466 
                      00467         ;---------------------------------------------------
                      00468         ; Cursor the display
                      00469         ; (may not be necessary but its good practice)
                      00470         ;---------------------------------------------------
0107   0189           00471         clrf      PORTE                 ; -- Toggle LCD_E
0108   3001           00472         movlw     B'00000001'   ; --
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0109   00A9           00473         movwf     LCD_E 
010A   0089           00474         movwf     PORTE
010B   3002           00475         movlw     0x02                  ; 
010C   2???           00476         call      DelayW                ; -- delay 777 us 
010D   3001           00477         movlw     B'00000001'   ; -\ Clear Display
010E   00AC           00478         movwf     LCD_Data
010F   0088           00479         movwf     PORTD                 ; -- Send to LCD
0110   3002           00480         movlw     0x02                  ; 
0111   2???           00481         call      DelayW                ; -- delay 777 us
0112   0189           00482         clrf      PORTE                 ; --
0113   3002           00483         movlw     0x02                  ; 
0114   2???           00484         call      DelayW                ; -- delay 777 us
0115   0188           00485         clrf      PORTD                 ; -/
                      00486 
0116   3002           00487         movlw     0x02                  ; Delay 777 us
0117   2???           00488         call      DelayW        
                      00489 
                      00490         ;---------------------------------------------------
                      00491         ; Turn Display on, Cursor on, Blink on
                      00492         ;---------------------------------------------------
0118   0189           00493         clrf      PORTE                 ; -\ Toggle LCD_E
0119   3001           00494         movlw     B'00000001'   ; --
011A   00A9           00495         movwf     LCD_E 
011B   0089           00496         movwf     PORTE
011C   3002           00497         movlw     0x02                  ; 
011D   2???           00498         call      DelayW                ; -- delay 777 us
011E   300C           00499         movlw     B'00001100'   ; -- Display on, Cursor off, Blink off
011F   00AC           00500         movwf     LCD_Data
0120   0088           00501         movwf     PORTD                 ; -- Send to LCD
0121   3002           00502         movlw     0x02                  ; 
0122   2???           00503         call      DelayW                ; -- delay 777 us
0123   0189           00504         clrf      PORTE                 ; --
0124   3002           00505         movlw     0x02                  ; 
0125   2???           00506         call      DelayW                ; -- delay 777 us
0126   0188           00507         clrf      PORTD                 ; -/
                      00508 
0127   3002           00509         movlw     0x02                  ; Delay 777 us
0128   2???           00510         call      DelayW        
                      00511 
                      00512         ;---------------------------------------------------
                      00513         ; Increase cursor posistion as we print chars
                      00514         ; Don't scroll our screen left or right.. confusing!
                      00515         ;---------------------------------------------------
0129   0189           00516         clrf      PORTE                 ; -\ Toggle LCD_E
012A   3001           00517         movlw     B'00000001'   ; --
012B   00A9           00518         movwf     LCD_E 
012C   0089           00519         movwf     PORTE
012D   3002           00520         movlw     0x02                  ; 
012E   2???           00521         call      DelayW                ; -- delay 777 us 
012F   3006           00522         movlw     B'00000110'   ; -- Increase cursor position, scroll off
0130   00AC           00523         movwf     LCD_Data
0131   0088           00524         movwf     PORTD                 ; -- Send to LCD
0132   3002           00525         movlw     0x02                  ; 
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0133   2???           00526         call      DelayW                ; -- delay 777 us
0134   0189           00527         clrf      PORTE
0135   2???           00528         call      DelayW                ; -- delay 777 us
0136   0188           00529         clrf      PORTD                 ; -/
                      00530 
0137   2???           00531         call LCD_WcurLabel          ; Write "cur-val:"
0138   2???           00532         call LCD_WavgLabel              ; Write "avg-val:"
                      00533 
0139   0008           00534         return
                      00535 
013A                  00536 LCD_ClearScreen:
                      00537         ;---------------------------------------------------
                      00538         ; Clear Screen and cursor home...
                      00539         ;---------------------------------------------------
                      00540         ; Clear Screen
                      00541         ;---------------------------------------------------
013A   0189           00542         clrf      PORTE                 ; -\ Toggle LCD_E
013B   3001           00543         movlw     B'00000001'   ; --
013C   00A9           00544         movwf     LCD_E 
013D   0089           00545         movwf     PORTE
013E   3002           00546         movlw     0x02                  ; 
013F   2???           00547         call      DelayW                ; -- delay 777 us
0140   3001           00548         movlw     B'00000001'   ; -\ Clear Screen
0141   00AC           00549         movwf     LCD_Data
0142   0088           00550         movwf     PORTD                 ; -- Send to LCD
0143   3002           00551         movlw     0x02                  ; 
0144   2???           00552         call      DelayW                ; -- delay 777 us
0145   0189           00553         clrf      PORTE
0146   2???           00554         call      DelayW
0147   0188           00555         clrf      PORTD 
                      00556         ;---------------------------------------------------
                      00557         ; Cursor home
                      00558         ;---------------------------------------------------
0148   0189           00559         clrf      PORTE                 ; -\ Toggle LCD_E
0149   3001           00560         movlw     B'00000001'   ; --
014A   00A9           00561         movwf     LCD_E 
014B   0089           00562         movwf     PORTE
014C   3002           00563         movlw     0x02                  ; 
014D   2???           00564         call      DelayW                ; -- delay 777 us
014E   3002           00565         movlw     B'00000010'   ; -\ Cursor home
014F   00AC           00566         movwf     LCD_Data
0150   0088           00567         movwf     PORTD                 ; -- Send to LCD
0151   3002           00568         movlw     0x02                  ; 
0152   2???           00569         call      DelayW                ; -- delay 777 us
0153   0189           00570         clrf      PORTE
0154   2???           00571         call      DelayW
0155   0188           00572         clrf      PORTD 
                      00573         
0156   0008           00574         return
                      00575 
0157                  00576 LCD_WriteHello:
                      00577         ;---------------------------------------------------
                      00578         ; Write "Hello" for funnsies
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00579         ;---------------------------------------------------
0157   0189           00580         clrf      PORTE                 ; -\ Toggle LCD_E
0158   3005           00581         movlw     B'00000101'   ; -- & enable write...
0159   00A9           00582         movwf     LCD_E 
015A   0089           00583         movwf     PORTE
015B   3002           00584         movlw     0x02                  ; 
015C   2???           00585         call      DelayW                ; -- delay 777 us
015D   3048           00586         movlw     B'01001000'   ; -- 'H'
015E   00AC           00587         movwf     LCD_Data
015F   0088           00588         movwf     PORTD                 ; -- Send to LCD
0160   3002           00589         movlw     0x02                  ; 
0161   2???           00590         call      DelayW                ; -- delay 777 us
0162   0189           00591         clrf      PORTE
0163   2???           00592         call      DelayW
0164   0188           00593         clrf      PORTD 
                      00594 
0165   0189           00595         clrf      PORTE                 ; -\ Toggle LCD_E
0166   3005           00596         movlw     B'00000101'   ; -- & enable write...
0167   00A9           00597         movwf     LCD_E 
0168   0089           00598         movwf     PORTE
0169   3002           00599         movlw     0x02                  ; 
016A   2???           00600         call      DelayW                ; -- delay 777 us
016B   3065           00601         movlw     B'01100101'   ; -- 'e'
016C   00AC           00602         movwf     LCD_Data
016D   0088           00603         movwf     PORTD                 ; -- Send to LCD
016E   3002           00604         movlw     0x02                  ; 
016F   2???           00605         call      DelayW                ; -- delay 777 us
0170   0189           00606         clrf      PORTE
0171   2???           00607         call      DelayW
0172   0188           00608         clrf      PORTD 
                      00609 
0173   0189           00610         clrf      PORTE                 ; -\ Toggle LCD_E
0174   3005           00611         movlw     B'00000101'   ; -- & enable write...
0175   00A9           00612         movwf     LCD_E 
0176   0089           00613         movwf     PORTE
0177   3002           00614         movlw     0x02                  ; 
0178   2???           00615         call      DelayW                ; -- delay 777 us
0179   306C           00616         movlw     B'01101100'   ; -- 'l'
017A   00AC           00617         movwf     LCD_Data
017B   0088           00618         movwf     PORTD                 ; -- Send to LCD
017C   3002           00619         movlw     0x02                  ; 
017D   2???           00620         call      DelayW                ; -- delay 777 us
017E   0189           00621         clrf      PORTE
017F   2???           00622         call      DelayW
0180   0188           00623         clrf      PORTD 
                      00624 
0181   0189           00625         clrf      PORTE                 ; -\ Toggle LCD_E
0182   3005           00626         movlw     B'00000101'   ; -- & enable write...
0183   00A9           00627         movwf     LCD_E 
0184   0089           00628         movwf     PORTE
0185   3002           00629         movlw     0x02                  ; 
0186   2???           00630         call      DelayW                ; -- delay 777 us
0187   306C           00631         movlw     B'01101100'   ; -- 'l'
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0188   00AC           00632         movwf     LCD_Data
0189   0088           00633         movwf     PORTD                 ; -- Send to LCD
018A   3002           00634         movlw     0x02                  ; 
018B   2???           00635         call      DelayW                ; -- delay 777 us
018C   0189           00636         clrf      PORTE
018D   2???           00637         call      DelayW
018E   0188           00638         clrf      PORTD 
                      00639 
018F   0189           00640         clrf      PORTE                 ; -\ Toggle LCD_E
0190   3005           00641         movlw     B'00000101'   ; -- & enable write...
0191   00A9           00642         movwf     LCD_E 
0192   0089           00643         movwf     PORTE
0193   3002           00644         movlw     0x02                  ; 
0194   2???           00645         call      DelayW                ; -- delay 777 us
0195   306F           00646         movlw     B'01101111'   ; -- 'o'
0196   00AC           00647         movwf     LCD_Data
0197   0088           00648         movwf     PORTD                 ; -- Send to LCD
0198   3002           00649         movlw     0x02                  ; 
0199   2???           00650         call      DelayW                ; -- delay 777 us
019A   0189           00651         clrf      PORTE
019B   2???           00652         call      DelayW
019C   0188           00653         clrf      PORTD 
                      00654         
019D   0008           00655         return
                      00656 
019E                  00657 LCD_WriteW:
                      00658         ;---------------------------------------------------
                      00659         ; Write the ascii equivalent of what is 
                      00660         ; held in the working reg.
                      00661         ;---------------------------------------------------
019E   00B1           00662         movwf     tempChar              ; save passed in arg..
                      00663 
019F   0189           00664         clrf      PORTE                 ; -\ Toggle LCD_E
01A0   3005           00665         movlw     B'00000101'   ; -- & enable write...
01A1   00A9           00666         movwf     LCD_E 
01A2   0089           00667         movwf     PORTE
01A3   3002           00668         movlw     0x02                  ; 
01A4   2???           00669         call      DelayW                ; -- delay 777 us
01A5   0831           00670         movfw     tempChar              ; -- bring back the char..
01A6   00AC           00671         movwf     LCD_Data
01A7   0088           00672         movwf     PORTD                 ; -- Send to LCD
01A8   3002           00673         movlw     0x02                  ; 
01A9   2???           00674         call      DelayW                ; -- delay 777 us
01AA   0189           00675         clrf      PORTE
01AB   2???           00676         call      DelayW                ; -- delay 777 us
01AC   0188           00677         clrf      PORTD                 ; -/
01AD   3000           00678         movlw     0x00
                      00679 
01AE   0008           00680         return
                      00681 
01AF                  00682 LCD_WcurVal:
                      00683         ;---------------------------------------------------
                      00684         ; Write Current Value
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00685         ; move the cursor to the proper location 
                      00686         ; in order to write the current sound 
                      00687         ; level. line 1, col 9
                      00688         ;---------------------------------------------------
01AF   00B1           00689         movwf     tempChar              ; save passed in value
                      00690         
01B0   0189           00691         clrf      PORTE                 ; -\ Toggle LCD_E
01B1   3001           00692         movlw     B'00000001'   ; -- & enable write...
01B2   00A9           00693         movwf     LCD_E 
01B3   0089           00694         movwf     PORTE
01B4   3002           00695         movlw     0x02                  ; 
01B5   2???           00696         call      DelayW                ; -- delay 777 us
01B6   3088           00697         movlw     B'10001000'   ; -- DDRAM Address to 8
01B7   00AC           00698         movwf     LCD_Data
01B8   0088           00699         movwf     PORTD                 ; -- Send to LCD
01B9   3002           00700         movlw     0x02                  ; 
01BA   2???           00701         call      DelayW                ; -- delay 777 us
01BB   0189           00702         clrf      PORTE
01BC   2???           00703         call      DelayW
01BD   0188           00704         clrf      PORTD 
                      00705         
01BE   0831           00706         movfw     tempChar              ; recall passed in value
01BF   00B4           00707         movwf     Current_Char1 ; load value into Character1 variable
01C0   0E34           00708         swapf     Current_Char1,w       ; Swap the high nibble to the lowpart, then move to working.
01C1   00B5           00709         movwf     Current_Char2 ; load the swapped value into Character 2
                      00710 
01C2   0835           00711         movfw     Current_Char2 ; load character1 into working register
01C3   2???           00712         call      CharConvert   ; Call Character Conversion
01C4   00B5           00713         movwf     Current_Char2 ; Load the character conversion into Character1
                      00714 
01C5   2???           00715         call      LCD_WriteW    ; call the LCD_WriteW function to write our converted character
                      00716 
01C6   0834           00717         movfw     Current_Char1 ; load Character1 into the working register
01C7   2???           00718         call      CharConvert   ; Call character conversion
01C8   00B4           00719         movwf     Current_Char1 ; Load the character conversion into Character2
                      00720 
01C9   2???           00721         call      LCD_WriteW    ; call the LCD_WriteW function to write our converted character         
                      00722         
01CA   0008           00723         return
                      00724 
01CB                  00725 LCD_WcurLabel:
                      00726         ;---------------------------------------------------
                      00727         ; Write "cur-val:" label on screen on line 1
                      00728         ;---------------------------------------------------
                      00729         
01CB   0189           00730         clrf      PORTE                 ; -\ Toggle LCD_E
01CC   3005           00731         movlw     B'00000101'   ; -- & enable write...
01CD   00A9           00732         movwf     LCD_E 
01CE   0089           00733         movwf     PORTE
01CF   3002           00734         movlw     0x02                  ; 
01D0   2???           00735         call      DelayW                ; -- delay 777 us
01D1   3063           00736         movlw     B'01100011'   ; -- 'c'
01D2   00AC           00737         movwf     LCD_Data
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D3   0088           00738         movwf     PORTD                 ; -- Send to LCD
01D4   3002           00739         movlw     0x02                  ; 
01D5   2???           00740         call      DelayW                ; -- delay 777 us
01D6   0189           00741         clrf      PORTE
01D7   2???           00742         call      DelayW                ; -- delay 777 us
01D8   0188           00743         clrf      PORTD                 ; -/
                      00744 
01D9   0189           00745         clrf      PORTE                 ; -\ Toggle LCD_E
01DA   3005           00746         movlw     B'00000101'   ; -- & enable write...
01DB   00A9           00747         movwf     LCD_E 
01DC   0089           00748         movwf     PORTE
01DD   3002           00749         movlw     0x02                  ; 
01DE   2???           00750         call      DelayW                ; -- delay 777 us
01DF   3075           00751         movlw     B'01110101'   ; -- 'u'
01E0   00AC           00752         movwf     LCD_Data
01E1   0088           00753         movwf     PORTD                 ; -- Send to LCD
01E2   3002           00754         movlw     0x02                  ; 
01E3   2???           00755         call      DelayW                ; -- delay 777 us
01E4   0189           00756         clrf      PORTE
01E5   2???           00757         call      DelayW                ; -- delay 777 us
01E6   0188           00758         clrf      PORTD                 ; -/
                      00759 
01E7   0189           00760         clrf      PORTE                 ; -\ Toggle LCD_E
01E8   3005           00761         movlw     B'00000101'   ; -- & enable write...
01E9   00A9           00762         movwf     LCD_E 
01EA   0089           00763         movwf     PORTE
01EB   3002           00764         movlw     0x02                  ; 
01EC   2???           00765         call      DelayW                ; -- delay 777 us
01ED   3072           00766         movlw     B'01110010'   ; -- 'r'
01EE   00AC           00767         movwf     LCD_Data
01EF   0088           00768         movwf     PORTD                 ; -- Send to LCD
01F0   3002           00769         movlw     0x02                  ; 
01F1   2???           00770         call      DelayW                ; -- delay 777 us
01F2   0189           00771         clrf      PORTE
01F3   2???           00772         call      DelayW                ; -- delay 777 us
01F4   0188           00773         clrf      PORTD                 ; -/
                      00774 
01F5   0189           00775         clrf      PORTE                 ; -\ Toggle LCD_E
01F6   3005           00776         movlw     B'00000101'   ; -- & enable write...
01F7   00A9           00777         movwf     LCD_E 
01F8   0089           00778         movwf     PORTE
01F9   3002           00779         movlw     0x02                  ; 
01FA   2???           00780         call      DelayW                ; -- delay 777 us
01FB   302D           00781         movlw     B'00101101'   ; -- '-'
01FC   00AC           00782         movwf     LCD_Data
01FD   0088           00783         movwf     PORTD                 ; -- Send to LCD
01FE   3002           00784         movlw     0x02                  ; 
01FF   2???           00785         call      DelayW                ; -- delay 777 us
0200   0189           00786         clrf      PORTE
0201   2???           00787         call      DelayW                ; -- delay 777 us
0202   0188           00788         clrf      PORTD                 ; -/
                      00789 
0203   0189           00790         clrf      PORTE                 ; -\ Toggle LCD_E
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0204   3005           00791         movlw     B'00000101'   ; -- & enable write...
0205   00A9           00792         movwf     LCD_E 
0206   0089           00793         movwf     PORTE
0207   3002           00794         movlw     0x02                  ; 
0208   2???           00795         call      DelayW                ; -- delay 777 us
0209   3076           00796         movlw     B'01110110'   ; -- 'v'
020A   00AC           00797         movwf     LCD_Data
020B   0088           00798         movwf     PORTD                 ; -- Send to LCD
020C   3002           00799         movlw     0x02                  ; 
020D   2???           00800         call      DelayW                ; -- delay 777 us
020E   0189           00801         clrf      PORTE
020F   2???           00802         call      DelayW                ; -- delay 777 us
0210   0188           00803         clrf      PORTD                 ; -/
                      00804 
0211   0189           00805         clrf      PORTE                 ; -\ Toggle LCD_E
0212   3005           00806         movlw     B'00000101'   ; -- & enable write...
0213   00A9           00807         movwf     LCD_E 
0214   0089           00808         movwf     PORTE
0215   3002           00809         movlw     0x02                  ; 
0216   2???           00810         call      DelayW                ; -- delay 777 us
0217   3061           00811         movlw     B'01100001'   ; -- 'a'
0218   00AC           00812         movwf     LCD_Data
0219   0088           00813         movwf     PORTD                 ; -- Send to LCD
021A   3002           00814         movlw     0x02                  ; 
021B   2???           00815         call      DelayW                ; -- delay 777 us
021C   0189           00816         clrf      PORTE
021D   2???           00817         call      DelayW                ; -- delay 777 us
021E   0188           00818         clrf      PORTD                 ; -/
                      00819 
021F   0189           00820         clrf      PORTE                 ; -\ Toggle LCD_E
0220   3005           00821         movlw     B'00000101'   ; -- & enable write...
0221   00A9           00822         movwf     LCD_E 
0222   0089           00823         movwf     PORTE
0223   3002           00824         movlw     0x02                  ; 
0224   2???           00825         call      DelayW                ; -- delay 777 us
0225   306C           00826         movlw     B'01101100'   ; -- 'l'
0226   00AC           00827         movwf     LCD_Data
0227   0088           00828         movwf     PORTD                 ; -- Send to LCD
0228   3002           00829         movlw     0x02                  ; 
0229   2???           00830         call      DelayW                ; -- delay 777 us
022A   0189           00831         clrf      PORTE
022B   2???           00832         call      DelayW                ; -- delay 777 us
022C   0188           00833         clrf      PORTD                 ; -/
                      00834 
022D   0189           00835         clrf      PORTE                 ; -\ Toggle LCD_E
022E   3005           00836         movlw     B'00000101'   ; -- & enable write...
022F   00A9           00837         movwf     LCD_E 
0230   0089           00838         movwf     PORTE
0231   3002           00839         movlw     0x02                  ; 
0232   2???           00840         call      DelayW                ; -- delay 777 us
0233   303A           00841         movlw     B'00111010'   ; -- ':'
0234   00AC           00842         movwf     LCD_Data
0235   0088           00843         movwf     PORTD                 ; -- Send to LCD
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0236   3002           00844         movlw     0x02                  ; 
0237   2???           00845         call      DelayW                ; -- delay 777 us
0238   0189           00846         clrf      PORTE
0239   2???           00847         call      DelayW                ; -- delay 777 us
023A   0188           00848         clrf      PORTD                 ; -/
                      00849 
023B   142F           00850         bsf               curLabelDone,0
                      00851         
023C   0008           00852         return
                      00853 
023D                  00854 LCD_WavgLabel:
                      00855         ;---------------------------------------------------
                      00856         ; Write "avg-val:" label on screen on line 2
                      00857         ;---------------------------------------------------
                      00858 
023D   0189           00859         clrf      PORTE                 ; -\ Toggle LCD_E
023E   3001           00860         movlw     B'00000001'   ; -- & enable write...
023F   00A9           00861         movwf     LCD_E 
0240   0089           00862         movwf     PORTE
0241   3002           00863         movlw     0x02                  ; 
0242   2???           00864         call      DelayW                ; -- delay 777 us
0243   30A8           00865         movlw     B'10101000'   ; -- DDRAM Address to 64
0244   00AC           00866         movwf     LCD_Data
0245   0088           00867         movwf     PORTD                 ; -- Send to LCD
0246   3002           00868         movlw     0x02                  ; 
0247   2???           00869         call      DelayW                ; -- delay 777 us
0248   0189           00870         clrf      PORTE
0249   2???           00871         call      DelayW
024A   0188           00872         clrf      PORTD 
                      00873         
024B   0189           00874         clrf      PORTE                 ; -\ Toggle LCD_E
024C   3005           00875         movlw     B'00000101'   ; -- & enable write...
024D   00A9           00876         movwf     LCD_E 
024E   0089           00877         movwf     PORTE
024F   3002           00878         movlw     0x02                  ; 
0250   2???           00879         call      DelayW                ; -- delay 777 us
0251   3061           00880         movlw     B'01100001'   ; -- 'a'
0252   00AC           00881         movwf     LCD_Data
0253   0088           00882         movwf     PORTD                 ; -- Send to LCD
0254   3002           00883         movlw     0x02                  ; 
0255   2???           00884         call      DelayW                ; -- delay 777 us
0256   0189           00885         clrf      PORTE
0257   2???           00886         call      DelayW                ; -- delay 777 us
0258   0188           00887         clrf      PORTD                 ; -/
                      00888 
0259   0189           00889         clrf      PORTE                 ; -\ Toggle LCD_E
025A   3005           00890         movlw     B'00000101'   ; -- & enable write...
025B   00A9           00891         movwf     LCD_E 
025C   0089           00892         movwf     PORTE
025D   3002           00893         movlw     0x02                  ; 
025E   2???           00894         call      DelayW                ; -- delay 777 us
025F   3076           00895         movlw     B'01110110'   ; -- 'v'
0260   00AC           00896         movwf     LCD_Data
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0261   0088           00897         movwf     PORTD                 ; -- Send to LCD
0262   3002           00898         movlw     0x02                  ; 
0263   2???           00899         call      DelayW                ; -- delay 777 us
0264   0189           00900         clrf      PORTE
0265   2???           00901         call      DelayW                ; -- delay 777 us
0266   0188           00902         clrf      PORTD                 ; -/
                      00903 
0267   0189           00904         clrf      PORTE                 ; -\ Toggle LCD_E
0268   3005           00905         movlw     B'00000101'   ; -- & enable write...
0269   00A9           00906         movwf     LCD_E 
026A   0089           00907         movwf     PORTE
026B   3002           00908         movlw     0x02                  ; 
026C   2???           00909         call      DelayW                ; -- delay 777 us
026D   3067           00910         movlw     B'01100111'   ; -- 'g'
026E   00AC           00911         movwf     LCD_Data
026F   0088           00912         movwf     PORTD                 ; -- Send to LCD
0270   3002           00913         movlw     0x02                  ; 
0271   2???           00914         call      DelayW                ; -- delay 777 us
0272   0189           00915         clrf      PORTE
0273   2???           00916         call      DelayW                ; -- delay 777 us
0274   0188           00917         clrf      PORTD                 ; -/
                      00918 
0275   0189           00919         clrf      PORTE                 ; -\ Toggle LCD_E
0276   3005           00920         movlw     B'00000101'   ; -- & enable write...
0277   00A9           00921         movwf     LCD_E 
0278   0089           00922         movwf     PORTE
0279   3002           00923         movlw     0x02                  ; 
027A   2???           00924         call      DelayW                ; -- delay 777 us
027B   302D           00925         movlw     B'00101101'   ; -- '-'
027C   00AC           00926         movwf     LCD_Data
027D   0088           00927         movwf     PORTD                 ; -- Send to LCD
027E   3002           00928         movlw     0x02                  ; 
027F   2???           00929         call      DelayW                ; -- delay 777 us
0280   0189           00930         clrf      PORTE
0281   2???           00931         call      DelayW                ; -- delay 777 us
0282   0188           00932         clrf      PORTD                 ; -/
                      00933 
0283   0189           00934         clrf      PORTE                 ; -\ Toggle LCD_E
0284   3005           00935         movlw     B'00000101'   ; -- & enable write...
0285   00A9           00936         movwf     LCD_E 
0286   0089           00937         movwf     PORTE
0287   3002           00938         movlw     0x02                  ; 
0288   2???           00939         call      DelayW                ; -- delay 777 us
0289   3076           00940         movlw     B'01110110'   ; -- 'v'
028A   00AC           00941         movwf     LCD_Data
028B   0088           00942         movwf     PORTD                 ; -- Send to LCD
028C   3002           00943         movlw     0x02                  ; 
028D   2???           00944         call      DelayW                ; -- delay 777 us
028E   0189           00945         clrf      PORTE
028F   2???           00946         call      DelayW                ; -- delay 777 us
0290   0188           00947         clrf      PORTD                 ; -/
                      00948 
0291   0189           00949         clrf      PORTE                 ; -\ Toggle LCD_E
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0292   3005           00950         movlw     B'00000101'   ; -- & enable write...
0293   00A9           00951         movwf     LCD_E 
0294   0089           00952         movwf     PORTE
0295   3002           00953         movlw     0x02                  ; 
0296   2???           00954         call      DelayW                ; -- delay 777 us
0297   3061           00955         movlw     B'01100001'   ; -- 'a'
0298   00AC           00956         movwf     LCD_Data
0299   0088           00957         movwf     PORTD                 ; -- Send to LCD
029A   3002           00958         movlw     0x02                  ; 
029B   2???           00959         call      DelayW                ; -- delay 777 us
029C   0189           00960         clrf      PORTE
029D   2???           00961         call      DelayW                ; -- delay 777 us
029E   0188           00962         clrf      PORTD                 ; -/
                      00963 
029F   0189           00964         clrf      PORTE                 ; -\ Toggle LCD_E
02A0   3005           00965         movlw     B'00000101'   ; -- & enable write...
02A1   00A9           00966         movwf     LCD_E 
02A2   0089           00967         movwf     PORTE
02A3   3002           00968         movlw     0x02                  ; 
02A4   2???           00969         call      DelayW                ; -- delay 777 us
02A5   306C           00970         movlw     B'01101100'   ; -- 'l'
02A6   00AC           00971         movwf     LCD_Data
02A7   0088           00972         movwf     PORTD                 ; -- Send to LCD
02A8   3002           00973         movlw     0x02                  ; 
02A9   2???           00974         call      DelayW                ; -- delay 777 us
02AA   0189           00975         clrf      PORTE
02AB   2???           00976         call      DelayW                ; -- delay 777 us
02AC   0188           00977         clrf      PORTD                 ; -/
                      00978 
02AD   0189           00979         clrf      PORTE                 ; -\ Toggle LCD_E
02AE   3005           00980         movlw     B'00000101'   ; -- & enable write...
02AF   00A9           00981         movwf     LCD_E 
02B0   0089           00982         movwf     PORTE
02B1   3002           00983         movlw     0x02                  ; 
02B2   2???           00984         call      DelayW                ; -- delay 777 us
02B3   303A           00985         movlw     B'00111010'   ; -- ':'
02B4   00AC           00986         movwf     LCD_Data
02B5   0088           00987         movwf     PORTD                 ; -- Send to LCD
02B6   3002           00988         movlw     0x02                  ; 
02B7   2???           00989         call      DelayW                ; -- delay 777 us
02B8   0189           00990         clrf      PORTE
02B9   2???           00991         call      DelayW                ; -- delay 777 us
02BA   0188           00992         clrf      PORTD                 ; -/
                      00993 
02BB   1430           00994         bsf               avgLabelDone,0
                      00995         
02BC   0008           00996         return
                      00997 
02BD                  00998 LCD_WavgVal:
                      00999         ;---------------------------------------------------
                      01000         ; Write Average Value
                      01001         ; move the cursor to the proper location 
                      01002         ; in order to write the current sound 
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01003         ; level. line 2, col 8
                      01004         ;---------------------------------------------------
02BD   00B1           01005         movwf     tempChar              ; save passed in value
                      01006         
02BE   0189           01007         clrf      PORTE                 ; -\ Toggle LCD_E
02BF   3001           01008         movlw     B'00000001'   ; -- & enable write...
02C0   00A9           01009         movwf     LCD_E 
02C1   0089           01010         movwf     PORTE
02C2   3002           01011         movlw     0x02                  ; 
02C3   2???           01012         call      DelayW                ; -- delay 777 us
02C4   30C8           01013         movlw     B'11001000'   ; -- DDRAM Address to 
02C5   00AC           01014         movwf     LCD_Data
02C6   0088           01015         movwf     PORTD                 ; -- Send to LCD
02C7   3002           01016         movlw     0x02                  ; 
02C8   2???           01017         call      DelayW                ; -- delay 777 us
02C9   0189           01018         clrf      PORTE
02CA   2???           01019         call      DelayW
02CB   0188           01020         clrf      PORTD 
                      01021         
02CC   0831           01022         movfw     tempChar              ; recall passed in value
02CD   00B6           01023         movwf     Avg_Char1 ; load value into Character1 variable
02CE   0E36           01024         swapf     Avg_Char1,w   ; Swap the high nibble to the lowpart, then move to working.
02CF   00B7           01025         movwf     Avg_Char2     ; load the swapped value into Character 2
                      01026 
02D0   0837           01027         movfw     Avg_Char2     ; load character1 into working register
02D1   2???           01028         call      CharConvert   ; Call Character Conversion
02D2   00B7           01029         movwf     Avg_Char2     ; Load the character conversion into Character1
                      01030 
02D3   2???           01031         call      LCD_WriteW    ; call the LCD_WriteW function to write our converted character
                      01032 
02D4   0836           01033         movfw     Avg_Char1     ; load Character1 into the working register
02D5   2???           01034         call      CharConvert   ; Call character conversion
02D6   00B6           01035         movwf     Avg_Char1 ; Load the character conversion into Character2
                      01036 
02D7   2???           01037         call      LCD_WriteW    ; call the LCD_WriteW function to write our converted character         
                      01038         
02D8   0008           01039         return
                      01040 
                      01041 ;org     0xf7                  ; force table to cross a 256 instruction boundary
                      01042 
02D9                  01043 CharConvert:
02D9   390F           01044      andlw     0x0F                ; mask off invalid entries
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
02DA   00AA           01045      movwf     temp
02DB   30??           01046      movlw     high TableStart     ; get high order part of the beginning of the table
02DC   008A           01047      movwf     PCLATH
02DD   30??           01048      movlw     low TableStart      ; load starting address of table
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
02DE   072A           01049      addwf     temp,w              ; add offset
02DF   1803           01050      btfsc     STATUS,C            ; did it overflow?
02E0   0A8A           01051      incf      PCLATH,f            ; yes: increment PCLATH
02E1   0082           01052      movwf     PCL                 ; modify PCL
                      01053 
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01054 ; Here I modified a lookup table with the equivalent LCD HEX character values for binary values 0-15. 
                      01055 ; I have an excel file I created, which I will include in my writeup which shows the table and equivalen
                            t dice value, and the operations. 
                      01056 ; I then just made a simple 16 value lookup table, giving a HEX equivalent character value for each bina
                            ry input. WOOT?!
02E2                  01057 TableStart:
02E2   3430           01058      retlw     0x30             ; 0
02E3   3431           01059      retlw     0x31             ; 1
02E4   3432           01060      retlw     0x32             ; 2
02E5   3433           01061      retlw     0x33             ; 3
02E6   3434           01062      retlw     0x34             ; 4
02E7   3435           01063      retlw     0x35             ; 5
02E8   3436           01064      retlw     0x36             ; 6
02E9   3437           01065      retlw     0x37             ; 7
02EA   3438           01066      retlw     0x38             ; 8
02EB   3439           01067      retlw     0x39             ; 9
02EC   3441           01068      retlw     0x41             ; A
02ED   3442           01069      retlw     0x42             ; B
02EE   3443           01070          retlw     0x43             ; C
02EF   3444           01071      retlw     0x44             ; D
02F0   3445           01072      retlw     0x45             ; E
02F1   3446           01073      retlw     0x46             ; F
                      01074 
                      01075     
20C4 3EFF             01076     end
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

A2D_Average                       00000032
A2D_Current                       00000033
ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
Avg_Char1                         00000036
Avg_Char2                         00000037
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000002
CHS1                              00000003
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CSRC                              00000007
CharConvert                       000002D9
Current_Char1                     00000034
Current_Char2                     00000035
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
Delay                             00000024
Delay1                            0000002D
Delay2                            0000002E
DelayW                            00000020
Dice                              00000022
DiceHi                            00000024
DiceLow                           00000023
Dice_Display                      00000021
Dice_Final                        00000025
Display                           00000026
Display_Average                   00000039
Display_Current                   00000038
Display_Save                      00000020
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ExitISR                           0000001B
F                                 00000001
FERR                              00000002
FSR                               00000004
FVREN                             00000000
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

Filter                            0000009A
FilterInit                        00000055
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ISR                               00000004
LCD_ClearScreen                   0000013A
LCD_Data                          0000002C
LCD_E                             00000029
LCD_RS                            0000002A
LCD_RW                            0000002B
LCD_WavgLabel                     0000023D
LCD_WavgVal                       000002BD
LCD_WcurLabel                     000001CB
LCD_WcurVal                       000001AF
LCD_WriteHello                    00000157
LCD_WriteW                        0000019E
LCD_init                          000000C2
LTS                               00000001
LoadNewTMR0                       00000017
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
MainLoop                          00000054
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

PWM1CON                           0000009B
Queue                             0000003A
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_W                               00000002
Round                             000000A4
RunningSum                        0000009E
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

STATUS_Save                       00000071
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
ServiceTimer0                     0000000A
State                             00000027
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

TUN4                              00000004
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
TableStart                        000002E2
Toggle                            00000028
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_Save                            00000070
Z                                 00000002
_.org_1_000F                      0000000F
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
MPASM  5.35                     LAB_FINAL.ASM   3-15-2011  13:29:31         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
__DEBUG                           1
avgLabelDone                      00000030
curLabelDone                      0000002F
init                              00000029
temp                              000000AA
tempChar                          00000031

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :    52 reported,     0 suppressed

